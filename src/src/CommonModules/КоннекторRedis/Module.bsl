#Область ПрограммныйИнтерфейс

#Область NativeAPI

// SET.
// 
// Параметры:
//  Ключ - Строка - Ключ
//  Значение - Строка - Значение
//  Таймаут - Число - Время в секундах
// 
// Возвращаемое значение:
//  Булево
Функция SET(Ключ, Значение, Таймаут = 0) Экспорт
	Компонента = КоннекторRedisПовтИсп.КлиентRedis();
	Возврат Компонента.SET(Ключ, Значение, Таймаут);	
КонецФункции

// GET.
// 
// Параметры:
//  Ключ - Строка - Ключ
// 
// Возвращаемое значение:
//  Строка,Неопределено
Функция GET(Ключ) Экспорт
	Компонента = КоннекторRedisПовтИсп.КлиентRedis();
	Возврат Компонента.GET(Ключ);		
КонецФункции

// DEL.
// 
// Параметры:
//  Ключ - Строка - Ключ
// 
// Возвращаемое значение:
//  Число - Количество удаленных ключей: 1 или 0
Функция DEL(Ключ) Экспорт		
	Компонента = КоннекторRedisПовтИсп.КлиентRedis();
	Возврат Компонента.DEL(Ключ);		
КонецФункции

// EXISTS.
// 
// Параметры:
//  Ключ - Строка - Ключ
// 
// Возвращаемое значение:
//  Число - Количество элементов с указанным ключем
Функция EXISTS(Ключ) Экспорт
	Компонента = КоннекторRedisПовтИсп.КлиентRedis();
	Возврат Компонента.EXISTS(Ключ);
КонецФункции

// HSET.
// 
// Параметры:
//  Ключ - Строка - Ключ
//  Поле - Строка - Имя поля
//  Значение - Строка - Значение
// 
// Возвращаемое значение:
//  Булево
Функция HSET(Ключ, Поле, Значение) Экспорт
	Компонента = КоннекторRedisПовтИсп.КлиентRedis();
	Возврат Компонента.HSET(Ключ, Поле, Значение);	
КонецФункции

// HGET.
// 
// Параметры:
//  Ключ - Строка - Ключ
//  Поле - Строка - Поле
// 
// Возвращаемое значение:
//  Строка,Неопределено
Функция HGET(Ключ, Поле) Экспорт
	Компонента = КоннекторRedisПовтИсп.КлиентRedis();
	Возврат Компонента.HGET(Ключ, Поле);		
КонецФункции

// LPUSH.
// 
// Параметры:
//  Ключ - Строка - Ключ
//  Элементы - Строка - Строка элементов
//  Разделитель - Строка - Регулярное выражение для разделителя в строке элементов, по умолчанию "пробел"
// 
// Возвращаемое значение:
//  Число - Количество элементов в листе
Функция LPUSH(Ключ, Элементы, Разделитель = " ") Экспорт
	Компонента = КоннекторRedisПовтИсп.КлиентRedis();
	Возврат Компонента.LPUSH(Ключ, Элементы, Разделитель);
КонецФункции

// LRANGE.
// 
// Параметры:
//  Ключ - Строка - Ключ
//  НачальнаяПозиция - Число
//  КонечнаяПозиция - Число
// 
// Возвращаемое значение:
//  Строка - Сложенная строка из элементов списка
Функция LRANGE(Ключ, НачальнаяПозиция = 0, КонечнаяПозиция = -1) Экспорт
	Компонента = КоннекторRedisПовтИсп.КлиентRedis();
	Возврат Компонента.LRANGE(Ключ, НачальнаяПозиция, КонечнаяПозиция);
КонецФункции

// FLUSHALL.
Процедура FLUSHALL() Экспорт
	Компонента = КоннекторRedisПовтИсп.КлиентRedis();
	Компонента.FLUSHALL();
КонецПроцедуры

#КонецОбласти

#КонецОбласти
